//Main CPP file - use the rest from other part
#include <iostream>
#include "Monster.h"

void combat(Monster* pMonster, Monster* pMonster2) {
    while (pMonster->gethp() > 0 && pMonster2->gethp() > 0) {
        int monster1Attack = (pMonster->getStrength() + pMonster->getAttackDamage()) - pMonster2->getDR();
        int monster2Attack = (pMonster2->getStrength() + pMonster2->getAttackDamage() - pMonster->getDR());

        std::cout << pMonster->getName() << " attacks the " << pMonster2->getName() << " for a total of " << monster1Attack << " damage " << "\n";
        pMonster2->setHealth(pMonster2->gethp() - monster1Attack);
        std::cout << pMonster2->getName() << " now has " << pMonster2->gethp() << " remaining" << "\n";

        std::cout << pMonster2->getName() << " attacks the " << pMonster->getName() << " for a total of " << monster2Attack << " damage " << "\n";
        pMonster->setHealth(pMonster->gethp() - monster2Attack);
        std::cout << pMonster->getName() << " now has " << pMonster->gethp() << " remaining" << "\n";
    }
}

void endCombat(Monster* pMonster, Monster* pMonster2) {
    if (pMonster->gethp() <= 0) {
        pMonster->setAlive(false);
        std::cout << pMonster->getName() << " has been killed by " << pMonster2->getName();
    }
    else if (pMonster2->gethp() <= 0) {
        pMonster2->setAlive(false);
        std::cout << pMonster2->getName() << " has been killed by " << pMonster->getName();
    }
    else {
        pMonster->setAlive(false);
        pMonster2->setAlive(false);
        std::cout << pMonster->getName() << " and " << pMonster2->getName() << " have both been slain!";
    }
}

int main() {

    Monster* pMonster = nullptr;
    pMonster = new Monster(6, 500, "Frankie", 20, 20, 20, true);
    Monster* pMonster2 = nullptr;
    pMonster2 = new Monster(10, 100, "Windego", 10, 12, 10, true);
    if (!pMonster || !pMonster2) {
        std::cout << "Issue with memory allocation for pMonster pointer";
    }

    const int NUMMONSTERS = 6;
    Monster* pTheMonsters[NUMMONSTERS];
    for (int i = 0; i < NUMMONSTERS; i++) {
        pTheMonsters[i] = nullptr;
    }
    pTheMonsters[0] = new Monster(10, 100, "Dragon", 10, 12, 10, true);
    pTheMonsters[1] = new Monster(6, 50, "Zombie", 2, 6, 10, true);
    pTheMonsters[2] = new Monster(2, 10, "Bat", 10, 2, 2, true);
    pTheMonsters[3] = new Monster(6, 50, "Human", 8, 6, 10, true);
    pTheMonsters[4] = new Monster(6, 500, "Frankie", 20, 20, 20, true);
    pTheMonsters[5] = new Monster(10, 100, "Windego", 10, 12, 10, true);


 
    combat(pMonster, pMonster2);
    endCombat(pMonster, pMonster2);
    delete pMonster;
    delete pMonster2;
    pMonster = nullptr;
    pMonster2 = nullptr;
}
